@using Microsoft.AspNetCore.Identity
@model FinanceCalc.Models.DashboardViewModel

@{
    ViewData["Title"] = "Home";
    var expenses = Model.Expenses;
    var income = Model.Income;
    var savings = Model.Savings;
}

@if (User.Identity.IsAuthenticated)
{
    <style>
        body {
            background: linear-gradient(135deg, #e0e7ff 0%, #f3e8ff 50%, #fce7f3 100%);
        }

        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 24px;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 32px;
        }

        .dashboard-title {
            font-size: 28px;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
        }

        .dashboard-subtitle {
            font-size: 16px;
            color: #6b7280;
            margin: 4px 0 0 0;
        }

        .header-buttons {
            display: flex;
            gap: 12px;
        }

        .btn-modern {
            border-radius: 12px;
            font-weight: 500;
            font-size: 14px;
            padding: 8px 16px;
            border: 1px solid #d1d5db;
            transition: all 0.2s ease;
        }

        .btn-filter {
            background: white;
            color: #374151;
            display: flex;
            align-items: center;
            gap: 6px;
        }

            .btn-filter:hover {
                background: #f9fafb;
                border-color: #9ca3af;
            }

        .btn-export {
            background: #3b82f6;
            color: white;
            border-color: #3b82f6;
            display: flex;
            align-items: center;
            gap: 6px;
        }

            .btn-export:hover {
                background: #2563eb;
                border-color: #2563eb;
            }

        /* Metric Cards */
        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 24px;
            margin-bottom: 32px;
        }

        .metric-card {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: 1px solid #e5e7eb;
            position: relative;
        }

        .metric-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 16px;
        }

        .metric-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
        }

            .metric-icon.income {
                background: #10b981;
            }

            .metric-icon.expense {
                background: #ef4444;
            }

            .metric-icon.savings {
                background: #3b82f6;
            }

        .add-btn {
            background: none;
            border: none;
            color: #9ca3af;
            padding: 4px;
            border-radius: 6px;
            transition: all 0.2s ease;
            cursor: pointer;
        }

            .add-btn:hover {
                color: #6b7280;
                background: #f3f4f6;
            }

        .metric-content {
            margin-top: 12px;
        }

        .metric-label {
            font-size: 14px;
            font-weight: 500;
            color: #6b7280;
            margin: 0 0 4px 0;
        }

        .metric-value {
            font-size: 28px;
            font-weight: 700;
            color: #111827;
            margin: 0 0 4px 0;
        }

        .metric-change {
            font-size: 14px;
            font-weight: 500;
            margin: 0;
        }

            .metric-change.positive {
                color: #10b981;
            }

            .metric-change.negative {
                color: #ef4444;
            }

            .metric-change.neutral {
                color: #3b82f6;
            }

        /* Charts Grid */
        .charts-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 24px;
            margin-bottom: 32px;
        }

        .chart-card {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: 1px solid #e5e7eb;
        }

        .chart-title {
            font-size: 18px;
            font-weight: 600;
            color: #111827;
            margin: 0 0 20px 0;
        }

        .chart-container {
            height: 280px;
            position: relative;
            margin-bottom: 16px;
        }

        .chart-footer {
            text-align: center;
            font-size: 14px;
            color: #6b7280;
        }

        /* Recent Transactions */
        .transactions-section {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: 1px solid #e5e7eb;
        }

        .transactions-title {
            font-size: 20px;
            font-weight: 700;
            color: #111827;
            margin: 0 0 20px 0;
        }

        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px;
            background: #f9fafb;
            border-radius: 12px;
            margin-bottom: 12px;
            border: 1px solid #e5e7eb;
        }

        .transaction-left {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .transaction-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
        }

        .transaction-info h6 {
            font-size: 16px;
            font-weight: 600;
            color: #111827;
            margin: 0;
        }

        .transaction-info p {
            font-size: 14px;
            color: #6b7280;
            margin: 2px 0 0 0;
        }

        .transaction-right {
            text-align: right;
        }

        .transaction-amount {
            font-size: 16px;
            font-weight: 700;
            margin: 0;
        }

        .transaction-date {
            font-size: 12px;
            color: #9ca3af;
            margin: 2px 0 0 0;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .dashboard-container {
                padding: 16px;
            }

            .dashboard-header {
                flex-direction: column;
                gap: 16px;
                align-items: stretch;
            }

            .metrics-grid {
                grid-template-columns: 1fr;
            }

            .charts-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>

    <div class="dashboard-container">
        <!-- Header -->
        <div class="dashboard-header">
            <div>
                <h1 class="dashboard-title">Financial Overview</h1>
                <p class="dashboard-subtitle">Track your income, expenses, and savings</p>
            </div>
            <div class="header-buttons">
                <button class="btn btn-modern btn-filter">
                    <i class="bi bi-funnel"></i>
                    Filter
                </button>
                <div class="dropdown">
                    <button class="btn btn-modern btn-export dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-download"></i>
                        Export
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                        <li>
                            <a class="dropdown-item" asp-controller="ImportExport" asp-action="ExportToPdf">
                                <i class="fas fa-file-pdf text-danger"></i> Export to PDF
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" asp-controller="ImportExport" asp-action="ExportToExcel">
                                <i class="fas fa-file-excel text-success"></i> Export to Excel
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" asp-controller="ImportExport" asp-action="ExportToCsv">
                                <i class="fas fa-file-csv text-primary"></i> Export to CSV
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Metric Cards -->
        <div class="metrics-grid">
            <!-- Total Income Card -->
            <div class="metric-card">
                <div class="metric-header">
                    <div class="metric-icon income">
                        <i class="bi bi-trending-up"></i>
                    </div>
                    <button class="add-btn" data-bs-toggle="modal" data-bs-target="#addIncomeModal">
                        <i class="bi bi-plus" style="font-size: 20px;"></i>
                    </button>
                </div>
                <div class="metric-content">
                    <p class="metric-label">Total Income</p>
                    <p class="metric-value">@((ViewBag.MonthlyIncome as decimal?)?.ToString("C") ?? "$0")</p>
                    <p class="metric-change positive">+12.5% vs last month</p>
                </div>
            </div>

            <!-- Total Expenses Card -->
            <div class="metric-card">
                <div class="metric-header">
                    <div class="metric-icon expense">
                        <i class="bi bi-trending-down"></i>
                    </div>
                    <button class="add-btn" data-bs-toggle="modal" data-bs-target="#addExpenseModal">
                        <i class="bi bi-plus" style="font-size: 20px;"></i>
                    </button>
                </div>
                <div class="metric-content">
                    <p class="metric-label">Total Expenses</p>
                    <p class="metric-value">@((ViewBag.IncomeVsExpenseData != null && ViewBag.IncomeVsExpenseData.Length > 0 ? (ViewBag.IncomeVsExpenseData[0] as decimal?)?.ToString("C") : "$0"))</p>
                    <p class="metric-change negative">+8.2% vs last month</p>
                </div>
            </div>

            <!-- Savings Goal Card -->
            <div class="metric-card">
                <div class="metric-header">
                    <div class="metric-icon savings">
                        <i class="bi bi-bullseye"></i>
                    </div>
                    <button class="add-btn" data-bs-toggle="modal" data-bs-target="#addSavingsModal">
                        <i class="bi bi-plus" style="font-size: 20px;"></i>
                    </button>
                </div>
                <div class="metric-content">
                    <p class="metric-label">Savings Goal</p>
                    <p class="metric-value">@((ViewBag.CurrentSavings as decimal?)?.ToString("C") ?? "$0")</p>
                    <p class="metric-change neutral">68% of goal vs last month</p>
                </div>
            </div>
        </div>

        <!-- Charts -->
        <div class="charts-grid">
            <!-- Expenses by Category -->
            <div class="chart-card">
                <h3 class="chart-title">Expenses by Category</h3>
                <div class="chart-container">
                    <canvas id="expenseChart"></canvas>
                </div>
            </div>

            <!-- Income vs Expenses -->
            <div class="chart-card">
                <h3 class="chart-title">Income vs Expenses</h3>
                <div class="chart-container">
                    <canvas id="incomeChart"></canvas>
                </div>
            </div>

            <!-- Savings Progress -->
            <div class="chart-card">
                <h3 class="chart-title">Savings Progress</h3>
                <div class="chart-container">
                    <canvas id="savingsChart"></canvas>
                </div>
                <div class="chart-footer">
                    @((ViewBag.CurrentSavings as decimal?)?.ToString("C") ?? "$0") of @((ViewBag.SavingsGoal as decimal?)?.ToString("C") ?? "$0")
                </div>
            </div>
        </div>

        <!-- Recent Transactions -->
        <div class="transactions-section">
            <h3 class="transactions-title">Recent Transactions</h3>
            @foreach (var item in Model.Expenses.Take(5))
            {
                var bgColor = item.Category switch
                {
                    "Food" => "#fff4e0",
                    "Transportation" => "#e8f0ff",
                    "Utilities" => "#fff1e6",
                    "Entertainment" => "#f4e8ff",
                    "Health & Medical" => "#e0f7f1",
                    "Housing" => "#ffe4e1",
                    "Education" => "#e6f7ff",
                    "Personal Care" => "#fdf0ff",
                    "Clothing" => "#fffbe6",
                    "Travel" => "#e8faff",
                    "Gifts & Donations" => "#f5e6ff",
                    "Insurance" => "#e6f0ff",
                    "Subscriptions" => "#f4f4f4",
                    "Phone & Internet" => "#edf7ff",
                    "Home Maintenance" => "#fff8e1",
                    "Childcare" => "#ffe6f0",
                    "Pet Care" => "#e6fce9",
                    "Taxes" => "#fef1e6",
                    "Bank Fees" => "#f8e6ff",
                    "Loan Payments" => "#e6f5ff",
                    "Fuel" => "#fff0e6",
                    "Parking & Tolls" => "#e6f4ff",
                    "Office Supplies" => "#f0f4ff",
                    "Dining Out" => "#ffe6d9",
                    "Gym & Fitness" => "#e0fff4",
                    "Beauty & Grooming" => "#ffe6fa",
                    "Hobbies" => "#f0eaff",
                    "Miscellaneous" => "#f5f5f5",
                    "Salary" => "#e0ffe0",
                    _ => "#f0f0f0"
                };

                var emoji = item.Category switch
                {
                    "Food" => "🍔",
                    "Transportation" => "🚗",
                    "Utilities" => "💡",
                    "Entertainment" => "🎮",
                    "Health & Medical" => "🩺",
                    "Housing" => "🏠",
                    "Education" => "🎓",
                    "Personal Care" => "🧴",
                    "Clothing" => "👕",
                    "Travel" => "✈️",
                    "Gifts & Donations" => "🎁",
                    "Insurance" => "🛡️",
                    "Subscriptions" => "📺",
                    "Phone & Internet" => "📱",
                    "Home Maintenance" => "🔧",
                    "Childcare" => "🧒",
                    "Pet Care" => "🐾",
                    "Taxes" => "💰",
                    "Bank Fees" => "🏦",
                    "Loan Payments" => "💳",
                    "Fuel" => "⛽",
                    "Parking & Tolls" => "🅿️",
                    "Office Supplies" => "📎",
                    "Dining Out" => "🍽️",
                    "Gym & Fitness" => "🏋️",
                    "Beauty & Grooming" => "💄",
                    "Hobbies" => "🎨",
                    "Miscellaneous" => "🧩",
                    "Salary" => "💼",
                    _ => "💸"
                };

                bool isIncome = item.Amount > 0;
                string amountColorClass = isIncome ? "text-success" : "text-danger";

                <div class="transaction-item">
                    <div class="transaction-left">
                        <div class="transaction-icon" style="background-color: @bgColor;">
                            <span>@emoji</span>
                        </div>
                        <div class="transaction-info">
                            <h6>@item.Category</h6>
                            <p>@item.Date.ToString("MMM dd, yyyy")</p>
                        </div>
                    </div>
                    <div class="transaction-right">
                        <p class="transaction-amount @amountColorClass">@item.Amount.ToString("C")</p>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- All your existing modals -->
    <!-- Add Expense Modal -->
    <div class="modal fade" id="addExpenseModal" tabindex="-1" aria-labelledby="addExpenseModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form id="addExpenseForm" onsubmit="submitExpense(event)">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addExpenseModalLabel">Add Expense</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="expenseAmount" class="form-label">Amount</label>
                            <input type="number" step="0.01" class="form-control" id="expenseAmount" required>
                        </div>
                        <div class="mb-3">
                            <label for="expenseCategory" class="form-label">Category</label>
                            <select class="form-select" id="expenseCategory" required>
                                <option value="" disabled selected>Select category</option>
                                <option>Food</option>
                                <option>Transportation</option>
                                <option>Utilities</option>
                                <option>Entertainment</option>
                                <option>Health & Medical</option>
                                <option>Housing</option>
                                <option>Education</option>
                                <option>Personal Care</option>
                                <option>Clothing</option>
                                <option>Travel</option>
                                <option>Gifts & Donations</option>
                                <option>Insurance</option>
                                <option>Subscriptions</option>
                                <option>Phone & Internet</option>
                                <option>Home Maintenance</option>
                                <option>Childcare</option>
                                <option>Pet Care</option>
                                <option>Taxes</option>
                                <option>Bank Fees</option>
                                <option>Loan Payments</option>
                                <option>Fuel</option>
                                <option>Parking & Tolls</option>
                                <option>Office Supplies</option>
                                <option>Dining Out</option>
                                <option>Gym & Fitness</option>
                                <option>Beauty & Grooming</option>
                                <option>Hobbies</option>
                                <option>Miscellaneous</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="expenseDate" class="form-label">Date</label>
                            <input type="date" class="form-control" id="expenseDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="expenseNote" class="form-label">Note (optional)</label>
                            <textarea class="form-control" id="expenseNote" rows="2"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Add Expense</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add Income Modal -->
    <div class="modal fade" id="addIncomeModal" tabindex="-1" aria-labelledby="addIncomeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form id="addIncomeForm" onsubmit="submitIncome(event)">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addIncomeModalLabel">Add Income</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="incomeAmount" class="form-label">Amount</label>
                            <input type="number" step="0.01" class="form-control" id="incomeAmount" required>
                            <div id="incomeAmountError" class="text-danger mt-1" style="display:none;"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Add Income</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add Savings Modal -->
    <div class="modal fade" id="addSavingsModal" tabindex="-1" aria-labelledby="addSavingsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form id="addSavingsForm" onsubmit="submitSavings(event)">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addSavingsModalLabel">Add Savings</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="targetAmount" class="form-label">Target Amount <span class="text-danger">*</span></label>
                            <input type="number" step="0.01" class="form-control" id="targetAmount" required placeholder="Enter target savings amount">
                            <div id="targetAmountError" class="text-danger mt-1" style="display:none;"></div>
                        </div>
                        <div class="mb-3">
                            <label for="currentAmount" class="form-label">Current Amount</label>
                            <input type="number" step="0.01" class="form-control" id="currentAmount" placeholder="Enter current savings amount (optional)">
                            <div id="currentAmountError" class="text-danger mt-1" style="display:none;"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save Savings</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}
else
{
    <style>
        body {
            background: linear-gradient(135deg, #e0e7ff 0%, #f3e8ff 50%, #fce7f3 100%);
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .landing-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Hero Section */
        .hero-section {
            padding: 80px 0;
            text-align: center;
        }

        .hero-badge {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: #eff6ff;
            color: #2563eb;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 24px;
        }

        .hero-title {
            font-size: 48px;
            font-weight: 700;
            color: #111827;
            margin-bottom: 16px;
            line-height: 1.1;
        }

            .hero-title .highlight {
                color: #6366f1;
            }

        .hero-subtitle {
            font-size: 20px;
            color: #6b7280;
            margin-bottom: 48px;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        /* Feature Cards */
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 32px;
            margin: 80px 0;
        }

        .feature-card {
            text-align: center;
            padding: 32px 24px;
        }

        .feature-icon {
            width: 80px;
            height: 80px;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 24px;
            font-size: 32px;
            color: white;
        }

            .feature-icon.blue {
                background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            }

            .feature-icon.purple {
                background: linear-gradient(135deg, #8b5cf6, #6d28d9);
            }

            .feature-icon.green {
                background: linear-gradient(135deg, #10b981, #047857);
            }

            .feature-icon.orange {
                background: linear-gradient(135deg, #f97316, #ea580c);
            }

            .feature-icon.teal {
                background: linear-gradient(135deg, #14b8a6, #0f766e);
            }

        .feature-title {
            font-size: 20px;
            font-weight: 600;
            color: #111827;
            margin-bottom: 12px;
        }

        .feature-description {
            font-size: 16px;
            color: #6b7280;
            line-height: 1.6;
        }

        /* Articles Section */
        .articles-section {
            padding: 80px 0;
            text-align: center;
        }

        .section-title {
            font-size: 36px;
            font-weight: 700;
            color: #111827;
            margin-bottom: 16px;
        }

            .section-title .highlight {
                color: #8b5cf6;
            }

        .section-subtitle {
            font-size: 18px;
            color: #6b7280;
            margin-bottom: 48px;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .articles-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 32px;
            margin-bottom: 48px;
        }

        .article-card {
            background: white;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: 1px solid #e5e7eb;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .article-card:hover {
                transform: translateY(-4px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            }

        .article-image {
            width: 100%;
            height: 200px;
            background: #f3f4f6;
            position: relative;
        }

        .article-tag {
            position: absolute;
            top: 16px;
            left: 16px;
            background: #8b5cf6;
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }

        .article-content {
            padding: 24px;
            text-align: left;
        }

        .article-meta {
            font-size: 14px;
            color: #6b7280;
            margin-bottom: 8px;
        }

        .article-title {
            font-size: 18px;
            font-weight: 600;
            color: #111827;
            margin-bottom: 12px;
            line-height: 1.4;
        }

        .article-excerpt {
            font-size: 14px;
            color: #6b7280;
            margin-bottom: 16px;
            line-height: 1.5;
        }

        .read-more {
            color: #8b5cf6;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 4px;
        }

            .read-more:hover {
                color: #7c3aed;
            }

        /* Transform Section */
        .transform-section {
            padding: 80px 0;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 80px;
            align-items: center;
        }

        .transform-content h2 {
            font-size: 36px;
            font-weight: 700;
            color: #111827;
            margin-bottom: 24px;
        }

            .transform-content h2 .highlight {
                color: #3b82f6;
            }

        .transform-description {
            font-size: 18px;
            color: #6b7280;
            margin-bottom: 32px;
            line-height: 1.6;
        }

        .benefits-list {
            list-style: none;
            padding: 0;
            margin-bottom: 32px;
        }

            .benefits-list li {
                display: flex;
                align-items: center;
                gap: 12px;
                margin-bottom: 16px;
                font-size: 16px;
                color: #374151;
            }

        .check-icon {
            width: 20px;
            height: 20px;
            background: #10b981;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 12px;
            flex-shrink: 0;
        }

        .cta-button {
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
            color: white;
            padding: 16px 32px;
        }

        .cta-button {
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
            color: white;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: transform 0.2s ease;
        }

            .cta-button:hover {
                transform: translateY(-2px);
                color: white;
            }

        /* Stats Panel */
        .stats-panel {
            background: #f8fafc;
            border-radius: 20px;
            padding: 40px;
        }

        .stats-title {
            font-size: 24px;
            font-weight: 600;
            color: #111827;
            margin-bottom: 32px;
        }

        .stat-item {
            margin-bottom: 32px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .stat-left {
            flex: 1;
        }

        .stat-value {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 4px;
        }

            .stat-value.green {
                color: #10b981;
            }

            .stat-value.blue {
                color: #3b82f6;
            }

            .stat-value.purple {
                color: #8b5cf6;
            }

            .stat-value.orange {
                color: #f97316;
            }

        .stat-label {
            font-size: 14px;
            color: #6b7280;
        }

        .stat-icon-badge {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
        }

            .stat-icon-badge.green {
                background: #dcfce7;
                color: #16a34a;
            }

            .stat-icon-badge.yellow {
                background: #fef3c7;
                color: #d97706;
            }

            .stat-icon-badge.red {
                background: #fee2e2;
                color: #dc2626;
            }

            .stat-icon-badge.orange {
                background: #fed7aa;
                color: #ea580c;
            }

        /* Testimonials */
        .testimonials-section {
            padding: 80px 0;
            text-align: center;
        }

        .testimonials-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 32px;
            margin-bottom: 48px;
        }

        .testimonial-card {
            background: white;
            border-radius: 16px;
            padding: 32px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: 1px solid #e5e7eb;
        }

        .stars {
            color: #fbbf24;
            margin-bottom: 16px;
            font-size: 18px;
        }

        .testimonial-text {
            font-size: 16px;
            color: #374151;
            margin-bottom: 20px;
            line-height: 1.6;
            font-style: italic;
        }

        .testimonial-author {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .author-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: linear-gradient(135deg, #8b5cf6, #3b82f6);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
        }

        .author-info h4 {
            font-size: 16px;
            font-weight: 600;
            color: #111827;
            margin: 0;
        }

        .author-info p {
            font-size: 14px;
            color: #6b7280;
            margin: 0;
        }

        /* Final CTA */
        .final-cta {
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
            color: white;
            padding: 80px 0;
            text-align: center;
            margin-top: 80px;
        }

        .rating-badge {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: rgba(255, 255, 255, 0.1);
            padding: 8px 16px;
            border-radius: 20px;
            margin-bottom: 32px;
        }

        .final-cta h2 {
            font-size: 42px;
            font-weight: 700;
            margin-bottom: 16px;
        }

        .final-cta p {
            font-size: 18px;
            margin-bottom: 32px;
            opacity: 0.9;
        }

        .cta-buttons {
            display: flex;
            gap: 16px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn-primary-cta {
            background: white;
            color: #3b82f6;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            transition: transform 0.2s ease;
        }

        .btn-secondary-cta {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.2s ease;
        }

            .btn-primary-cta:hover,
            .btn-secondary-cta:hover {
                transform: translateY(-2px);
            }

        .trust-indicators {
            display: flex;
            justify-content: center;
            gap: 40px;
            margin-top: 40px;
            flex-wrap: wrap;
        }

        .trust-item {
            display: flex;
            align-items: center;
            gap: 8px;
            opacity: 0.8;
        }

        /* Hero with Dashboard */
        .hero-with-dashboard {
            padding: 80px 0;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 80px;
            align-items: center;
        }

        .hero-content h1 {
            font-size: 48px;
            font-weight: 700;
            color: #111827;
            margin-bottom: 16px;
            line-height: 1.1;
        }

            .hero-content h1 .highlight {
                background: linear-gradient(135deg, #3b82f6, #8b5cf6);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }

        .hero-content p {
            font-size: 18px;
            color: #6b7280;
            margin-bottom: 32px;
            line-height: 1.6;
        }

        .hero-buttons {
            display: flex;
            gap: 16px;
            margin-bottom: 32px;
        }

        .hero-stats {
            display: flex;
            gap: 40px;
        }

        .hero-stat h3 {
            font-size: 24px;
            font-weight: 700;
            color: #111827;
            margin: 0;
        }

        .hero-stat p {
            font-size: 14px;
            color: #6b7280;
            margin: 0;
        }

        .dashboard-preview {
            background: #f8fafc;
            border-radius: 20px;
            padding: 20px;
            position: relative;
        }

        .dashboard-mockup {
            background: white;
            border-radius: 12px;
            padding: 24px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .mockup-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }

        .mockup-title {
            font-size: 18px;
            font-weight: 600;
            color: #111827;
        }

        .mockup-dots {
            display: flex;
            gap: 6px;
        }

        .dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
        }

            .dot.red {
                background: #ef4444;
            }

            .dot.yellow {
                background: #f59e0b;
            }

            .dot.green {
                background: #10b981;
            }

        .mockup-metrics {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 16px;
            margin-bottom: 24px;
        }

        .mockup-metric {
            padding: 16px;
            border-radius: 8px;
            border: 1px solid #e5e7eb;
        }

        .metric-icon-small {
            width: 32px;
            height: 32px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 8px;
            font-size: 16px;
            color: white;
        }

            .metric-icon-small.green {
                background: #10b981;
            }

            .metric-icon-small.blue {
                background: #3b82f6;
            }

        .mockup-metric h4 {
            font-size: 20px;
            font-weight: 700;
            color: #111827;
            margin: 0 0 4px 0;
        }

        .mockup-metric p {
            font-size: 12px;
            color: #6b7280;
            margin: 0;
        }

        .mockup-metric .change {
            font-size: 12px;
            font-weight: 500;
        }

            .mockup-metric .change.positive {
                color: #10b981;
            }

            .mockup-metric .change.negative {
                color: #ef4444;
            }

        .savings-progress {
            background: #f8fafc;
            border-radius: 8px;
            padding: 16px;
            text-align: center;
        }

        .progress-title {
            font-size: 14px;
            font-weight: 500;
            color: #111827;
            margin-bottom: 8px;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e5e7eb;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 8px;
        }

        .progress-fill {
            height: 100%;
            background: #8b5cf6;
            width: 68%;
            border-radius: 4px;
        }

        .progress-text {
            font-size: 12px;
            color: #6b7280;
        }

        .savings-badge {
            position: absolute;
            top: -10px;
            right: 20px;
            background: #10b981;
            color: white;
            padding: 8px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .hero-title,
            .hero-content h1 {
                font-size: 36px;
            }

            .transform-section,
            .hero-with-dashboard {
                grid-template-columns: 1fr;
                gap: 40px;
            }

            .hero-stats {
                flex-direction: column;
                gap: 20px;
            }

            .cta-buttons,
            .hero-buttons {
                flex-direction: column;
            }
        }
    </style>

    <div class="landing-container">
        <!-- Hero with Dashboard Preview -->
        <section class="hero-with-dashboard">
            <div class="hero-content">
                <div class="hero-badge">
                    <i class="bi bi-shield-check"></i>
                    Trusted by 50,000+ users worldwide
                </div>
                <h1>Take Control of Your <span class="highlight">Financial Future</span></h1>
                <p>Stop wondering where your money goes. Track expenses, set budgets, and build wealth with our intuitive financial management platform.</p>
                <div class="hero-buttons">
                    <a href="/Identity/Account/Register" class="cta-button">
                        Start Free Today <i class="bi bi-arrow-right"></i>
                    </a>
                    <a href="#demo" class="btn-secondary-cta">Watch Demo</a>
                </div>
                <div class="hero-stats">
                    <div class="hero-stat">
                        <h3>50K+</h3>
                        <p>Active Users</p>
                    </div>
                    <div class="hero-stat">
                        <h3>$2M+</h3>
                        <p>Money Tracked</p>
                    </div>
                    <div class="hero-stat">
                        <h3>99.9%</h3>
                        <p>Uptime</p>
                    </div>
                </div>
            </div>
            <div class="dashboard-preview">
                <div class="savings-badge">+$125 saved</div>
                <div class="dashboard-mockup">
                    <div class="mockup-header">
                        <h3 class="mockup-title">Financial Overview</h3>
                        <div class="mockup-dots">
                            <div class="dot red"></div>
                            <div class="dot yellow"></div>
                            <div class="dot green"></div>
                        </div>
                    </div>
                    <div class="mockup-metrics">
                        <div class="mockup-metric">
                            <div class="metric-icon-small green">
                                <i class="bi bi-trending-up"></i>
                            </div>
                            <h4>$4,250</h4>
                            <p>Total Income</p>
                            <span class="change positive">+12%</span>
                        </div>
                        <div class="mockup-metric">
                            <div class="metric-icon-small blue">
                                <i class="bi bi-credit-card"></i>
                            </div>
                            <h4>$2,890</h4>
                            <p>Expenses</p>
                            <span class="change negative">-8%</span>
                        </div>
                    </div>
                    <div class="savings-progress">
                        <div class="progress-title">Savings Goal</div>
                        <div class="progress-bar">
                            <div class="progress-fill"></div>
                        </div>
                        <div class="progress-text">$1,360 of $2,000 saved</div>
                        <div style="margin-top: 8px;">
                            <span style="background: #3b82f6; color: white; padding: 4px 8px; border-radius: 12px; font-size: 10px;">Budget on track</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Features Section -->
        <section class="hero-section">
            <h1 class="hero-title">Everything you need to <span class="highlight">master your money</span></h1>
            <p class="hero-subtitle">Our comprehensive suite of tools makes financial management simple, intuitive, and effective for everyone.</p>

            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon blue">
                        <i class="bi bi-clock"></i>
                    </div>
                    <h3 class="feature-title">Smart Expense Tracking</h3>
                    <p class="feature-description">Automatically categorize and track your expenses with intelligent insights that help you understand your spending patterns.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon purple">
                        <i class="bi bi-bullseye"></i>
                    </div>
                    <h3 class="feature-title">Goal-Based Budgeting</h3>
                    <p class="feature-description">Set and achieve your financial goals with personalized budgets that adapt to your lifestyle and priorities.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon green">
                        <i class="bi bi-graph-up"></i>
                    </div>
                    <h3 class="feature-title">Real-Time Analytics</h3>
                    <p class="feature-description">Get instant insights into your financial health with beautiful charts and reports that make data easy to understand.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon orange">
                        <i class="bi bi-phone"></i>
                    </div>
                    <h3 class="feature-title">Mobile-First Design</h3>
                    <p class="feature-description">Manage your money on the go with our responsive design that works perfectly on any device, anywhere.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon purple">
                        <i class="bi bi-shield-check"></i>
                    </div>
                    <h3 class="feature-title">Bank-Level Security</h3>
                    <p class="feature-description">Your financial data is protected with enterprise-grade encryption and security measures you can trust.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon teal">
                        <i class="bi bi-credit-card"></i>
                    </div>
                    <h3 class="feature-title">Multi-Account Support</h3>
                    <p class="feature-description">Connect all your accounts in one place - bank accounts, credit cards, investments, and crypto wallets.</p>
                </div>
            </div>
        </section>

        <!-- Articles Section -->
        <section class="articles-section">
            <h2 class="section-title">Learn from our <span class="highlight">financial experts</span></h2>
            <p class="section-subtitle">Discover smart money habits, practical tips, and strategies to make your finances work for you.</p>

            <div class="articles-grid">
                <article class="article-card">
                    <div class="article-image">
                        <span class="article-tag">Saving Tips</span>
                    </div>
                    <div class="article-content">
                        <div class="article-meta">5 min read</div>
                        <h3 class="article-title">5 Easy Ways to Start Saving Today</h3>
                        <p class="article-excerpt">Simple strategies to help you save money fast — even on a tight budget.</p>
                        <a href="#" class="read-more">Read More <i class="bi bi-arrow-right"></i></a>
                    </div>
                </article>
                <article class="article-card">
                    <div class="article-image">
                        <span class="article-tag">Emergency Planning</span>
                    </div>
                    <div class="article-content">
                        <div class="article-meta">7 min read</div>
                        <h3 class="article-title">How to Build an Emergency Fund That Works</h3>
                        <p class="article-excerpt">Learn how to protect yourself from financial surprises with a strong emergency fund.</p>
                        <a href="#" class="read-more">Read More <i class="bi bi-arrow-right"></i></a>
                    </div>
                </article>
                <article class="article-card">
                    <div class="article-image">
                        <span class="article-tag">Financial Planning</span>
                    </div>
                    <div class="article-content">
                        <div class="article-meta">10 min read</div>
                        <h3 class="article-title">Master Your Money: A Beginner's Guide</h3>
                        <p class="article-excerpt">A beginner's guide to budgeting, saving, and taking control of your finances.</p>
                        <a href="#" class="read-more">Read More <i class="bi bi-arrow-right"></i></a>
                    </div>
                </article>
            </div>

            <a href="#" class="cta-button">View All Articles <i class="bi bi-arrow-right"></i></a>
        </section>

        <!-- Transform Section -->
        <section class="transform-section">
            <div class="transform-content">
                <h2>Transform your <span class="highlight">financial life</span></h2>
                <p class="transform-description">Join thousands of people who've taken control of their finances and built the life they want. It's time to stop worrying about money and start making it work for you.</p>

                <ul class="benefits-list">
                    <li>
                        <span class="check-icon">✓</span>
                        Stop living paycheck to paycheck
                    </li>
                    <li>
                        <span class="check-icon">✓</span>
                        Build an emergency fund that protects you
                    </li>
                    <li>
                        <span class="check-icon">✓</span>
                        Save for your dreams - vacation, home, education
                    </li>
                    <li>
                        <span class="check-icon">✓</span>
                        Reduce financial stress and anxiety
                    </li>
                    <li>
                        <span class="check-icon">✓</span>
                        Make informed spending decisions
                    </li>
                    <li>
                        <span class="check-icon">✓</span>
                        Track progress toward your goals
                    </li>
                </ul>

                <a href="/Identity/Account/Register" class="cta-button">
                    Start Your Journey <i class="bi bi-arrow-right"></i>
                </a>
            </div>

            <div class="stats-panel">
                <h3 class="stats-title">Real Results from Real Users</h3>

                <div class="stat-item">
                    <div class="stat-left">
                        <div class="stat-value green">87%</div>
                        <div class="stat-label">Reduced financial stress</div>
                    </div>
                    <div class="stat-icon-badge green">
                        <i class="bi bi-bar-chart"></i>
                    </div>
                </div>

                <div class="stat-item">
                    <div class="stat-left">
                        <div class="stat-value blue">$1,247</div>
                        <div class="stat-label">Average monthly savings increase</div>
                    </div>
                    <div class="stat-icon-badge yellow">
                        💰
                    </div>
                </div>

                <div class="stat-item">
                    <div class="stat-left">
                        <div class="stat-value purple">3.2x</div>
                        <div class="stat-label">Faster goal achievement</div>
                    </div>
                    <div class="stat-icon-badge red">
                        <i class="bi bi-bullseye"></i>
                    </div>
                </div>

                <div class="stat-item">
                    <div class="stat-left">
                        <div class="stat-value orange">92%</div>
                        <div class="stat-label">Would recommend to friends</div>
                    </div>
                    <div class="stat-icon-badge orange">
                        <i class="bi bi-star-fill"></i>
                    </div>
                </div>
            </div>
        </section>

        <!-- Testimonials Section -->
        <section class="testimonials-section">
            <h2 class="section-title">Loved by thousands of <span class="highlight">happy users</span></h2>
            <p class="section-subtitle">Don't just take our word for it. Here's what real people are saying about their financial transformation.</p>

            <div class="testimonials-grid">
                <div class="testimonial-card">
                    <div class="stars">★★★★★</div>
                    <p class="testimonial-text">"This app completely changed how I think about money. I've saved more in 6 months than I did in 2 years before. The budgeting tools are incredibly intuitive!"</p>
                    <div class="testimonial-author">
                        <div class="author-avatar">SJ</div>
                        <div class="author-info">
                            <h4>Sarah Johnson</h4>
                            <p>Marketing Manager</p>
                        </div>
                    </div>
                </div>
                <div class="testimonial-card">
                    <div class="stars">★★★★★</div>
                    <p class="testimonial-text">"As someone who loves data, the analytics and insights are phenomenal. I can see exactly where my money goes and make informed decisions about my spending."</p>
                    <div class="testimonial-author">
                        <div class="author-avatar">MC</div>
                        <div class="author-info">
                            <h4>Michael Chen</h4>
                            <p>Software Engineer</p>
                        </div>
                    </div>
                </div>
                <div class="testimonial-card">
                    <div class="stars">★★★★★</div>
                    <p class="testimonial-text">"Managing both personal and business finances used to be a nightmare. Now everything is organized and I have complete visibility into my financial health."</p>
                    <div class="testimonial-author">
                        <div class="author-avatar">ER</div>
                        <div class="author-info">
                            <h4>Emily Rodriguez</h4>
                            <p>Small Business Owner</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <!-- Final CTA -->
    <section class="final-cta">
        <div class="landing-container">
            <div class="rating-badge">
                ⭐ 4.9/5 from over 2,000 reviews
            </div>
            <h2>Ready to take control of your financial future?</h2>
            <p>Join thousands of people who've transformed their financial lives. Start your journey to financial freedom today - it's completely free!</p>

            <div class="cta-buttons">
                <a href="/Identity/Account/Register" class="btn-primary-cta">
                    Get Started Free <i class="bi bi-arrow-right"></i>
                </a>
                <a href="#demo" class="btn-secondary-cta">Watch Demo</a>
            </div>

            <div class="trust-indicators">
                <div class="trust-item">
                    <i class="bi bi-shield-check"></i>
                    Bank-level security
                </div>
                <div class="trust-item">
                    <i class="bi bi-credit-card"></i>
                    No credit card required
                </div>
                <div class="trust-item">
                    <i class="bi bi-phone"></i>
                    Works on all devices
                </div>
            </div>
        </div>
    </section>
}

@section Scripts {
    @if (User.Identity.IsAuthenticated)
    {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            let expenseChart, incomeChart, savingsChart;

            // Submit Income Function
            async function submitIncome(event) {
                event.preventDefault();

                const amountInput = document.getElementById('incomeAmount');
                const errorDiv = document.getElementById('incomeAmountError');

                if (!amountInput || !errorDiv) {
                    alert('Required elements not found');
                    return;
                }

                const amountValue = amountInput.value.trim();

                // Clear previous error
                errorDiv.style.display = 'none';
                errorDiv.textContent = '';

                if (!amountValue) {
                    errorDiv.textContent = 'Amount is required.';
                    errorDiv.style.display = 'block';
                    amountInput.focus();
                    return;
                }

                const amount = parseFloat(amountValue);
                if (isNaN(amount) || amount <= 0) {
                    errorDiv.textContent = 'Please enter a valid positive amount.';
                    errorDiv.style.display = 'block';
                    amountInput.focus();
                    return;
                }

                const data = { Amount: amount };

                try {
                    const response = await fetch('/Incomes/AddIncome', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data),
                    });

                    if (!response.ok) {
                        let errorMsg = 'Unknown error';
                        try {
                            const errorData = await response.json();
                            errorMsg = errorData.details || errorData.error || errorMsg;
                        } catch {
                            // fallback if JSON parsing fails
                        }
                        alert('Error saving income:\n\n' + errorMsg);
                        return;
                    }

                    const result = await response.json();

                    if (result.success) {
                        const modalElement = document.getElementById('addIncomeModal');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        modal.hide();
                        document.getElementById('addIncomeForm').reset();
                        location.reload(); // Refresh to show updated data
                    } else {
                        alert('Failed to save income.');
                    }
                } catch (error) {
                    alert('Unexpected error: ' + error.message);
                }
            }

            // Submit Savings Function
            async function submitSavings(event) {
                event.preventDefault();

                const targetInput = document.getElementById('targetAmount');
                const currentInput = document.getElementById('currentAmount');
                const targetErrorDiv = document.getElementById('targetAmountError');
                const currentErrorDiv = document.getElementById('currentAmountError');

                // Clear previous errors
                targetErrorDiv.style.display = 'none';
                targetErrorDiv.textContent = '';
                currentErrorDiv.style.display = 'none';
                currentErrorDiv.textContent = '';

                if (!targetInput || !targetErrorDiv || !currentErrorDiv) {
                    alert('Required elements not found');
                    return;
                }

                const targetValue = targetInput.value.trim();
                const currentValue = currentInput.value.trim();

                if (!targetValue) {
                    targetErrorDiv.textContent = 'Target amount is required.';
                    targetErrorDiv.style.display = 'block';
                    targetInput.focus();
                    return;
                }

                const targetAmount = parseFloat(targetValue);
                if (isNaN(targetAmount) || targetAmount <= 0) {
                    targetErrorDiv.textContent = 'Please enter a valid positive target amount.';
                    targetErrorDiv.style.display = 'block';
                    targetInput.focus();
                    return;
                }

                let currentAmount = 0;
                if (currentValue) {
                    currentAmount = parseFloat(currentValue);
                    if (isNaN(currentAmount) || currentAmount < 0) {
                        currentErrorDiv.textContent = 'Please enter a valid current amount or leave empty.';
                        currentErrorDiv.style.display = 'block';
                        currentInput.focus();
                        return;
                    }
                }

                const data = {
                    TargetAmount: targetAmount,
                    CurrentAmount: currentAmount
                };

                try {
                    const response = await fetch('/Savings/SaveOrUpdateSavings', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data),
                    });

                    if (!response.ok) {
                        let errorMsg = 'Unknown error';
                        try {
                            const errorData = await response.json();
                            errorMsg = errorData.details || errorData.error || errorMsg;
                        } catch {
                            // fallback if JSON parsing fails
                        }
                        alert('Error saving savings:\n\n' + errorMsg);
                        return;
                    }

                    const result = await response.json();

                    if (result.success) {
                        const modalElement = document.getElementById('addSavingsModal');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        modal.hide();
                        document.getElementById('addSavingsForm').reset();
                        location.reload(); // Refresh to show updated data
                    } else {
                        alert('Failed to save savings.');
                    }
                } catch (error) {
                    alert('Unexpected error: ' + error.message);
                }
            }

            // Submit Expense Function
            async function submitExpense(event) {
                event.preventDefault();

                const amount = parseFloat(document.getElementById('expenseAmount').value);
                const category = document.getElementById('expenseCategory').value;
                const date = document.getElementById('expenseDate').value;
                const description = document.getElementById('expenseNote').value;

                if (!amount || !category || !date) {
                    alert('Please fill all required fields.');
                    return;
                }

                const data = {
                    Amount: amount,
                    Category: category,
                    Date: date,
                    Description: description
                };

                try {
                    const response = await fetch('/Expenses/AddExpense', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    if (!response.ok) {
                        const error = await response.json();
                        const errorText = error.details
                            ? JSON.stringify(error.details)
                            : (error.error || 'Unknown error');
                        alert('Error saving expense:\n\n' + errorText);
                        return;
                    }

                    const result = await response.json();

                    if (result.success) {
                        const modal = bootstrap.Modal.getInstance(document.getElementById('addExpenseModal'));
                        modal.hide();
                        document.getElementById('addExpenseForm').reset();
                        location.reload(); // Refresh to show updated data
                    } else {
                        alert('Failed to save expense.');
                    }
                } catch (error) {
                    alert('Unexpected error: ' + error.message);
                }
            }

            // Initialize Charts
            document.addEventListener("DOMContentLoaded", function () {
                // Expense Chart
                const expenseCtx = document.getElementById('expenseChart').getContext('2d');
                expenseChart = new Chart(expenseCtx, {
                    type: 'doughnut',
                    data: {
                        labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Labels ?? new string[0])),
                        datasets: [{
                            data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Data ?? new decimal[0])),
                            backgroundColor: ['#ef4444', '#3b82f6', '#10b981', '#f59e0b', '#8b5cf6', '#ec4899', '#14b8a6', '#f97316'],
                            borderWidth: 0,
                            hoverOffset: 8
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        cutout: '60%',
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    padding: 20,
                                    usePointStyle: true,
                                    font: { size: 12 }
                                }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleColor: 'white',
                                bodyColor: 'white',
                                cornerRadius: 8
                            }
                        }
                    }
                });

                // Income vs Expenses Chart
                const incomeCtx = document.getElementById('incomeChart').getContext('2d');
                incomeChart = new Chart(incomeCtx, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.IncomeVsExpenseLabels ?? new string[] { "Income", "Expenses" })),
                        datasets: [{
                            data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.IncomeVsExpenseData ?? new decimal[] { 0, 0 })),
                            backgroundColor: ['#10b981', '#ef4444'],
                            borderRadius: 8,
                            borderSkipped: false,
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                cornerRadius: 8
                            }
                        },
                        scales: {
                            x: {
                                grid: { display: false },
                                ticks: { font: { size: 12 } }
                            },
                            y: {
                                grid: { color: '#f3f4f6' },
                                ticks: { display: false }
                            }
                        }
                    }
                });

                // Savings Progress Chart
                const currentAmount = @(ViewBag.CurrentSavings ?? 0M);
                const targetAmount = @(ViewBag.SavingsGoal ?? 0M);
                const remainingAmount = Math.max(targetAmount - currentAmount, 0);

                const savingsCtx = document.getElementById('savingsChart').getContext('2d');
                savingsChart = new Chart(savingsCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Current Savings', 'Remaining to Goal'],
                        datasets: [{
                            data: [currentAmount, remainingAmount],
                            backgroundColor: ['#3b82f6', '#e5e7eb'],
                            borderWidth: 0,
                            cutout: '75%'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                cornerRadius: 8
                            }
                        }
                    },
                    plugins: [{
                        beforeDraw: function (chart) {
                            const width = chart.width,
                                height = chart.height,
                                ctx = chart.ctx;

                            ctx.restore();
                            const fontSize = (height / 114).toFixed(2);
                            ctx.font = "bold " + fontSize + "em sans-serif";
                            ctx.textBaseline = "middle";
                            ctx.fillStyle = "#111827";

                            const percentage = targetAmount > 0 ? Math.round((currentAmount / targetAmount) * 100) : 0;
                            const text = percentage + "%";
                            const textX = Math.round((width - ctx.measureText(text).width) / 2);
                            const textY = height / 2;

                            ctx.fillText(text, textX, textY);
                            ctx.save();
                        }
                    }]
                });
            });
        </script>
    }
}