@using Microsoft.AspNetCore.Identity
@model IEnumerable<FinanceCalc.Models.Transaction>

@{
    ViewData["Title"] = "Home";
}

<h1>Transactions</h1>

@if (User.Identity.IsAuthenticated)
{
    <p>
        <a asp-controller="Transactions" asp-action="Create">Create New</a>
    </p>

    <h3>Your Expenses by Category</h3>

    <div id="chartContainer" style="position: relative; width: 100%; height: 400px; opacity: 0; transform: translateY(20px); transition: opacity 0.8s ease, transform 0.8s ease;">
        <canvas id="expenseChart"></canvas>
    </div>

    <table class="table mt-4">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().Date)</th>
                <th>@Html.DisplayNameFor(model => model.First().Amount)</th>
                <th>@Html.DisplayNameFor(model => model.First().ExpenseCategory)</th>
                <th>@Html.DisplayNameFor(model => model.First().Type)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Date.ToShortDateString()</td>
                    <td>@item.Amount</td>
                    <td>@item.ExpenseCategory</td>
                    <td>@item.Type</td>
                    <td>
                        <a asp-controller="Transactions" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-controller="Transactions" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-controller="Transactions" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
   
}

@section Scripts {
    @if (User.Identity.IsAuthenticated)
    {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const chartContainer = document.getElementById("chartContainer");

                // Trigger fade-in and slide-up animation
                setTimeout(() => {
                    chartContainer.style.opacity = '1';
                    chartContainer.style.transform = 'translateY(0)';
                }, 100);

                const ctx = document.getElementById('expenseChart').getContext('2d');
                const chart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Labels)),
                        datasets: [{
                            label: 'Expenses by Category',
                            data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Data)),
                            backgroundColor: [
                                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'
                            ],
                            hoverOffset: 10
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        animation: {
                            animateScale: true,
                            animateRotate: true,
                            duration: 1200,
                            easing: 'easeOutBounce'
                        },
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            });
        </script>
    }
}
