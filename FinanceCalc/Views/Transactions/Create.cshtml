@model FinanceCalc.Models.Transaction

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Transaction</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control" asp-items="ViewBag.TransactionTypes" id="transactionType"></select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <div class="form-group" id="expenseCategoryGroup">
                <label asp-for="ExpenseCategory" class="control-label"></label>
                <select asp-for="ExpenseCategory" class="form-control" asp-items="ViewBag.ExpenseCategories"></select>
                <span asp-validation-for="ExpenseCategory" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function toggleExpenseCategory() {
            var typeSelect = document.getElementById("transactionType");
            var expenseCategoryGroup = document.getElementById("expenseCategoryGroup");

            if (typeSelect.value === "Expense") {
                expenseCategoryGroup.style.display = "block";
            } else {
                expenseCategoryGroup.style.display = "none";
                // Clear selection when hidden
                expenseCategoryGroup.querySelector("select").selectedIndex = -1;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            toggleExpenseCategory(); // Initial toggle on page load
            document.getElementById("transactionType").addEventListener("change", toggleExpenseCategory);
        });
    </script>
}
