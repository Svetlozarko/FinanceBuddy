@using System.Security.Claims
@inject FinanceCalc.Data.ApplicationDbContext _context

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - FinanceCalc</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/FinanceCalc.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

    <style>
        body, html {
            height: 100%;
            margin: 0;
        }

        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 220px;
            background-color: #f8f9fa;
            border-right: 1px solid #dee2e6;
            padding-top: 1rem;
            display: flex;
            flex-direction: column;
            z-index: 1000;
            transition: transform 0.3s ease;
        }

            .sidebar.collapsed {
                transform: translateX(-220px);
            }

            .sidebar .nav-link {
                color: #333;
                padding: 0.75rem 1.5rem;
                font-weight: 500;
                font-size: 14px;
                transition: all 0.2s ease;
            }

                .sidebar .nav-link.active,
                .sidebar .nav-link:hover {
                    background-color: #e9ecef;
                    color: #0d6efd;
                }

            /* Special styling for Connect Bank button */
            .sidebar .nav-link.bank-connect {
                background: linear-gradient(135deg, #10b981, #059669);
                color: white !important;
                margin: 0.5rem 1rem;
                border-radius: 8px;
                text-align: center;
                font-weight: 600;
                box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2);
            }

                .sidebar .nav-link.bank-connect:hover {
                    background: linear-gradient(135deg, #059669, #047857);
                    color: white !important;
                    transform: translateY(-1px);
                    box-shadow: 0 4px 8px rgba(16, 185, 129, 0.3);
                }

                .sidebar .nav-link.bank-connect.active {
                    background: linear-gradient(135deg, #047857, #065f46);
                    color: white !important;
                }

                .sidebar .nav-link.bank-connect i {
                    font-size: 16px;
                }

        .content-wrapper {
            padding: 2rem 1.5rem;
            min-height: 100vh;
            background-color: #fff;
            margin-left: 220px;
            transition: margin-left 0.3s ease;
        }

            .content-wrapper.expanded {
                margin-left: 0;
            }

        .sidebar .navbar-brand {
            font-weight: 700;
            font-size: 1.3rem;
            color: #0d6efd;
            text-decoration: none;
            margin: 0;
        }

        /* Sidebar header with toggle button */
        .sidebar-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1.5rem 0.75rem;
            border-bottom: 1px solid #dee2e6;
            margin-bottom: 0.75rem;
        }

        .sidebar-toggle {
            background: none;
            border: none;
            color: #6c757d;
            padding: 0.25rem;
            border-radius: 4px;
            transition: all 0.2s ease;
            font-size: 16px;
        }

            .sidebar-toggle:hover {
                background-color: #e9ecef;
                color: #0d6efd;
            }

        /* Fixed toggle button when sidebar is closed */
        .sidebar-toggle-fixed {
            position: fixed;
            top: 1rem;
            left: 1rem;
            z-index: 1001;
            background: #fff;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 0.5rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            color: #6c757d;
            font-size: 16px;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

            .sidebar-toggle-fixed.show {
                opacity: 1;
                visibility: visible;
            }

            .sidebar-toggle-fixed:hover {
                background-color: #f8f9fa;
                color: #0d6efd;
            }

        /* User Profile Styles */
        .user-profile {
            padding: 1rem 1.5rem;
            border-top: 1px solid #dee2e6;
            background-color: #fff;
            margin: 0 -1px -1px -1px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 14px;
            flex-shrink: 0;
        }

        .user-info {
            flex: 1;
            min-width: 0;
            margin-left: 0.75rem;
        }

        .user-name {
            font-weight: 600;
            color: #333;
            font-size: 14px;
            margin: 0;
            line-height: 1.2;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .user-email {
            color: #6c757d;
            font-size: 12px;
            margin: 0;
            line-height: 1.2;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .logout-btn {
            background: none;
            border: none;
            color: #6c757d;
            padding: 4px;
            border-radius: 4px;
            transition: all 0.2s ease;
            flex-shrink: 0;
            font-size: 14px;
        }

            .logout-btn:hover {
                background-color: #f8f9fa;
                color: #dc3545;
            }

        /* Bank connection status indicator */
        .bank-status-indicator {
            position: absolute;
            top: 8px;
            right: 8px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #10b981;
            border: 2px solid white;
        }

        /* Mobile responsiveness */
        @@media (max-width: 768px) {
            .sidebar {
                transform: translateX(-220px);
            }

                .sidebar.mobile-open {
                    transform: translateX(0);
                }

            .content-wrapper {
                margin-left: 0;
            }

            .sidebar-toggle-fixed {
                opacity: 1;
                visibility: visible;
            }
        }
    </style>
</head>
<body>
    @{
        int unreadCount = 0;
        bool isAuthenticated = User.Identity.IsAuthenticated;
        bool hasBankConnection = false;
        string userName = "";
        string userEmail = "";
        string userInitials = "";

        if (isAuthenticated)
        {
            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
            unreadCount = _context.InboxMessage.Count(m => m.UserId == userId && !m.IsRead);
            
            // Check if user has any bank connections
            hasBankConnection = _context.BankConnections.Any(bc => bc.ApplicationUserId == userId);

            userName = User.FindFirstValue(ClaimTypes.Name) ?? User.Identity.Name ?? "User";
            userEmail = User.FindFirstValue(ClaimTypes.Email) ?? "";

            // Generate initials from name
            var nameParts = userName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
            if (nameParts.Length >= 2)
            {
                userInitials = $"{nameParts[0][0]}{nameParts[1][0]}".ToUpper();
            }
            else if (nameParts.Length == 1)
            {
                userInitials = nameParts[0].Length >= 2 ? nameParts[0].Substring(0, 2).ToUpper() : nameParts[0][0].ToString().ToUpper();
            }
            else
            {
                userInitials = "U";
            }
        }
        ViewBag.UnreadMessagesCount = unreadCount;
    }

    <!-- Fixed toggle button for when sidebar is closed -->
    <button class="sidebar-toggle-fixed" id="sidebarToggleFixed" type="button">
        <i class="bi bi-list"></i>
    </button>

    <nav class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">FinanceCalc</a>
            <button class="sidebar-toggle" id="sidebarToggle" type="button">
                <i class="bi bi-x-lg" id="toggleIcon"></i>
            </button>
        </div>

        @if (isAuthenticated)
        {
            <nav class="nav flex-column flex-grow-1">
                <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")"
                   asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="bi bi-house-door-fill me-2"></i> Dashboard
                </a>

                <!-- Connect Bank Button - Prominent placement -->
                <a class="nav-link bank-connect @(ViewContext.RouteData.Values["controller"]?.ToString() == "Bank" ? "active" : "")"
                   asp-area="" asp-controller="Bank" asp-action="Connect">
                    <i class="bi bi-bank me-2"></i> 
                    @if (hasBankConnection)
                    {
                        <span>Manage Banks</span>
                        <span class="bank-status-indicator" title="Bank connected"></span>
                    }
                    else
                    {
                        <span>Connect Your Bank</span>
                    }
                </a>

                <a class="nav-link @(ViewContext.RouteData.Values["action"]?.ToString() == "Reports" ? "active" : "")"
                   asp-area="" asp-controller="Home" asp-action="Reports">
                    <i class="bi bi-bar-chart-fill me-2"></i> Reports
                </a>
            


                <a class="nav-link position-relative"
                   asp-area="" asp-controller="Inbox" asp-action="Index">
                    <i class="bi bi-envelope-fill me-2"></i> Inbox
                    @if (ViewBag.UnreadMessagesCount > 0)
                    {
                        <span class="badge bg-danger rounded-pill position-absolute top-0 start-100 translate-middle">
                            @ViewBag.UnreadMessagesCount
                        </span>
                    }
                </a>

                <a class="nav-link @(ViewContext.RouteData.Values["area"]?.ToString() == "Identity" && ViewContext.RouteData.Values["page"]?.ToString()?.Contains("Manage") == true ? "active" : "")"
                   asp-area="Identity" asp-page="/Account/Manage/Index">
                    <i class="bi bi-gear-fill me-2"></i> Settings
                </a>
            </nav>

            <!-- User Profile Section -->
            <div class="user-profile d-flex align-items-center gap-3">
                <div class="user-avatar">
                    @userInitials
                </div>
                <div class="user-info">
                    <p class="user-name">@userName</p>
                    <p class="user-email">@userEmail</p>
                </div>
                <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" class="d-inline">
                    <button type="submit" class="logout-btn" title="Logout">
                        <i class="bi bi-box-arrow-right"></i>
                    </button>
                </form>
            </div>
        }
        else
        {
            <div class="d-flex flex-column justify-content-between h-100 px-3 pb-3">
                <!-- Minimal sidebar when not logged in -->
                <div>
                    <p class="text-muted">Please log in to access the full dashboard.</p>
                </div>
                <div>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        }
    </nav>

    <div class="content-wrapper" id="contentWrapper">
        @RenderBody()
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebarToggleFixed = document.getElementById('sidebarToggleFixed');
            const sidebar = document.getElementById('sidebar');
            const contentWrapper = document.getElementById('contentWrapper');
            const toggleIcon = document.getElementById('toggleIcon');

            let sidebarOpen = true;

            function toggleSidebar() {
                sidebarOpen = !sidebarOpen;

                if (sidebarOpen) {
                    // Show sidebar
                    sidebar.classList.remove('collapsed');
                    contentWrapper.classList.remove('expanded');
                    sidebarToggleFixed.classList.remove('show');
                    toggleIcon.className = 'bi bi-x-lg';
                } else {
                    // Hide sidebar
                    sidebar.classList.add('collapsed');
                    contentWrapper.classList.add('expanded');
                    sidebarToggleFixed.classList.add('show');
                    toggleIcon.className = 'bi bi-list';
                }
            }

            // Add event listeners to both toggle buttons
            sidebarToggle.addEventListener('click', toggleSidebar);
            sidebarToggleFixed.addEventListener('click', toggleSidebar);

            // Handle mobile responsiveness
            function handleResize() {
                if (window.innerWidth <= 768) {
                    sidebar.classList.add('collapsed');
                    contentWrapper.classList.add('expanded');
                    sidebarToggleFixed.classList.add('show');
                    sidebarOpen = false;
                    toggleIcon.className = 'bi bi-list';
                } else {
                    sidebar.classList.remove('collapsed');
                    contentWrapper.classList.remove('expanded');
                    sidebarToggleFixed.classList.remove('show');
                    sidebarOpen = true;
                    toggleIcon.className = 'bi bi-x-lg';
                }
            }

            window.addEventListener('resize', handleResize);
            handleResize(); // Call on initial load
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>